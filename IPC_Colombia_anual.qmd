---
title: "CPI Colombia"
subtitle: "Total and Core inflation"
date: today
author: "Miguel Martinez"
format: 
  html:
    toc: true
    theme: cosmo
editor: visual
execute:
  warning: false
---

This document describes the process of building different visualizations of the evolution of the total and core inflation (inflation without foods, energy and other regulated) according to the Consumer Price Index (CPI) in Colombia which is made public by the Departamento Administrativo Nacional de Colombia ([DANE](https://www.dane.gov.co/)). You can download the data [here](https://www.dane.gov.co/index.php/estadisticas-por-tema/precios-y-costos/indice-de-precios-al-consumidor-ipc):

The first step is to load the following libraries:

```{r}

library(readxl)
library(tidyverse)
```

## Load data

Now, we are going to load the data:

```{r}

# Total inflation

df1 = readxl::read_excel("anex-IPC-Indices-abr2025.xlsx",
                         sheet = "IndicesIPC",
                         range = "A9:X21",
                         col_names = TRUE)

# Core inflation

df2 = readxl::read_excel("anex-IPC-sinAlimentosRegulados-mar2025.xlsx",
                         sheet = "2",
                         range = "A7:F83",
                         col_names = TRUE)

```

## Indexing, renaming and dtype transformation

```{r}

# Now we are going to omit some rows, rename some columns, and set columns as numeric

df2 = df2[-c(1:12), ] |>
  dplyr::rename(
    `Variacion Mensual` = 4,
    `Variacion Año corrido` = 5,
    `Variacion Anual` = 6) |> 
  dplyr::mutate_at(vars(4:6), as.numeric)

```

## Reshape and dtype transformation

Now we are going to reshape the total inflation's database in order to represent individual values by a single row (*stacked*)

```{r}

df1 = df1 |> 
  tidyr::pivot_longer(cols = `2003`:`2025`,
                      names_to = "Año") |> 
  dplyr::mutate_at(vars(Año), as.numeric)

df1
```

## Percentage change

Since total CPI is expresed in levels, we are going to compute the percentage change.

```{r}

df1 = df1 |>
  dplyr::mutate(
    value = (value / lag(value, n = 1) - 1) * 100)

```

## Merging Dataframes

Since core inflation's data is lagged 1 period regarding to total inflation, we are joining both databases with `left_join` function of `dplyr`:

```{r}

data = df1 |>
  tidyr::drop_na() |> 
  dplyr::left_join(df2,
                   by = join_by(Año, Mes))

data
```

## Reshape, rename and transform

As before, we are reshaping the data to the *long* or *stacked* format:

```{r}

data = data |> 
  dplyr::select(Mes, Año, value, `Variacion Anual`) |> 
  dplyr::rename(
     Inflacion_total = value,
     Inflacion_core = `Variacion Anual`) |> 
  tidyr::pivot_longer(cols = 3:4,
                      names_to = "Inflation_type",
                      values_to = "value") |> 
  dplyr::mutate(
    Mes = recode(Mes,
                 "Enero" = 01, "Febrero" = 02,
                 "Marzo" = 03, "Abril" = 04,
                 "Mayo" = 05, "Junio" = 06,
                 "Julio" = 07, "Agosto" = 08,
                 "Septiembre" = 09, "Octubre" = 10,
                 "Noviembre" = 11, "Diciembre" = 12))

data
```

## Filtering

```{r}

# We filter the data from 2020

data = data |> 
  dplyr::filter(Año >= 2020)
```

## Total inflation

```{r}

# Before we need to rename, filter, and transform 'Mes' in df1

df1 = df1 |> 
  dplyr::rename(Inflacion_total = value) |> 
  dplyr::filter(Año >= 2020) |> 
  dplyr::mutate(
    Mes = recode(Mes,
                 "Enero" = 01, "Febrero" = 02,
                 "Marzo" = 03, "Abril" = 04,
                 "Mayo" = 05, "Junio" = 06,
                 "Julio" = 07, "Agosto" = 08,
                 "Septiembre" = 09, "Octubre" = 10,
                 "Noviembre" = 11, "Diciembre" = 12))

```

```{r}

shadedarea <- 3  #Targeting inflation by Colombian Central bank

df1 |> 
ggplot(aes(x = Mes, y = Inflacion_total)) +
  geom_point() +
  geom_line() +
  geom_hline(yintercept = shadedarea, color = "grey", lwd = 20, alpha = 0.4) +
  facet_grid( . ~ Año) +
  scale_x_continuous(breaks = seq(0,12, by=2)) +
  scale_y_continuous(breaks = seq(0,15, by=1)) +
  theme_classic() +
  labs(title = "Índice de precios al consumidor, 2020-2025",
       subtitle = "(variación anual, fin de periodo)",
       x = "Meses",
       y = "Variación (%)",
       caption = "Fuente: Elaboración propia con datos del DANE, IPC") +
  theme(plot.caption.position = "panel",
        plot.caption = element_text(hjust = 0))

```

## Core inflation

```{r}

# First we need to select, rename, filter, and transform 'Mes' in df2

df2 = df2 |>
  dplyr::select(Año, Mes, `Variacion Anual`) |> 
  dplyr::rename(Inflacion_core = `Variacion Anual`) |> 
  dplyr::filter(Año >= 2020) |> 
  dplyr::mutate(
    Mes = recode(Mes,
                 "Enero" = 01, "Febrero" = 02,
                 "Marzo" = 03, "Abril" = 04,
                 "Mayo" = 05, "Junio" = 06,
                 "Julio" = 07, "Agosto" = 08,
                 "Septiembre" = 09, "Octubre" = 10,
                 "Noviembre" = 11, "Diciembre" = 12))

```

```{r}

shadedarea <- 3  #Targeting inflation by Colombian Central bank

df2 |> 
ggplot(aes(x = Mes, y = Inflacion_core)) +
  geom_point() +
  geom_line() +
  geom_hline(yintercept = shadedarea, color = "grey", lwd = 22, alpha = 0.4) +
  facet_grid( . ~ Año) +
  scale_x_continuous(breaks = seq(0,12, by=2)) +
  scale_y_continuous(breaks = seq(0,12, by=1)) +
  theme_classic() +
  labs(title = "Índice de precios al consumidor sin alimentos ni regulados, 2020-2025",
       subtitle = "(variación anual, fin de periodo)",
       x = "Meses",
       y = "Variación (%)",
       caption = "Fuente: Elaboración propia con datos del DANE, IPC") +
  theme(plot.caption.position = "panel",
        plot.caption = element_text(hjust = 0))

```

## Total and core inflation

```{r}

shadedarea <- 3  #Targeting inflation by Colombian Central bank

data |> 
ggplot(aes(x = Mes, y = value, colour = Inflation_type)) +
  geom_point() +
  geom_line() +
  geom_hline(yintercept = shadedarea, color = "grey", lwd = 16, alpha = 0.4) +
  facet_grid( . ~ Año) +
  scale_x_continuous(breaks = seq(0,12, by=2)) +
  scale_y_continuous(breaks = seq(0,14, by=1)) +
  theme_classic() +
  labs(title = "Índice de precios al consumidor total y sin Alimentos ni Regulados, 2020-2025",
       subtitle = "(variación anual, fin de periodo)",
       x = "Meses",
       y = "Variación (%)",
       caption = "Fuente: Elaboración propia con datos del DANE, IPC") +
  theme(plot.caption.position = "panel",
        plot.caption = element_text(hjust = 0),
        legend.position = "bottom")

```

## Conclusion

As you can see in the hard years of the pandemic (2020, 2021) the inflation measurements remained quite stable in the targeting inflation policy by the independent Colombian central bank: Banco de la República ([Banrep](https://www.banrep.gov.co/es/glosario/inflacion-objetivo)) or even a few periods below the targeting (represented by the gray shaded area). Although the following years due to the rebound effect of the national economy, we are still observing high inflation in the goods and services of the economy. This is an ongoing concern because this not only affect households, but also companies, governments and other agents in the economy. In other hand, the Colombian Banrep board of directors are expecting the return of the targeting inflation in the year 2025 according to the [last minutes](https://www.banrep.gov.co/es/noticias/minutas-banrep-enero-2025).
